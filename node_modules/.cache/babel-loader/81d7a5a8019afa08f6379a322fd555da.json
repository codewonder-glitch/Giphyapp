{"ast":null,"code":"var _jsxFileName = \"/Users/student_m13/Desktop/Github/giphyapp/src/components/Bookmarks.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\"; // import $ from 'jquery';\n\nimport './styles/Gif.scss';\nexport default class Bookmarks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getApi();\n    };\n\n    this.getApi = async () => {\n      var htmlArr = [];\n      await fetch('/giphy/v1/gifs', {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        htmlArr = data.map(dt => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 1\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: dt.gifUrl,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 5\n            }\n          }), /*#__PURE__*/React.createElement(\"button\", {\n            value: dt.gifID,\n            onClick: this.gifDelete,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 5\n            }\n          }, \" Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n            value: dt.gifID,\n            onClick: this.gifUpdate,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 5\n            }\n          }, \" Update\"));\n        });\n        this.setState({\n          htmlArray: htmlArr\n        });\n      }).catch(err => console.log('error'));\n    };\n\n    this.gifDelete = async e => {\n      e.preventDefault();\n      console.log(e.target.value);\n      await fetch('/giphy/v1/gifs/' + e.target.value, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }); //       .then( => {\n      //    // let updatedEmployees = [...this.state.employees].filter(i => i.id !== id);\n      //        // this.setState({employees: updatedEmployees});\n      //       });\n\n      this.getApi();\n    };\n\n    this.gifUpdate = e => {\n      e.preventDefault();\n      document.getElementsByClassName('modal')[0].style.display = 'flex';\n      this.setState({\n        urlChange: e.target.value\n      });\n    };\n\n    this.handleImageChange = e => {\n      e.preventDefault();\n      this.setState({\n        filePath: e.target.value\n      }); // let reader = new FileReader();\n      // let file = e.target.files[0];\n      // reader.onloadend = () => {\n      //   this.setState({\n      //     file: file,\n      //   });\n      // }\n      // reader.readAsDataURL(file)\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.state.urlChange);\n      this.updateDb();\n      document.getElementsByClassName('modal')[0].style.display = 'none';\n      alert(\"Image Uploaded\");\n    };\n\n    this.updateDb = async () => {\n      await fetch('/giphy/v1/gifs/' + this.state.urlChange, {\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          gifUrl: this.state.filePath\n        })\n      });\n      this.getApi();\n    };\n\n    this.closeModal = () => {\n      document.getElementsByClassName('modal')[0].style.display = 'none';\n    };\n\n    this.state = {\n      src: '',\n      filePath: '',\n      htmlArray: [],\n      urlChange: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"GridContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 12\n      }\n    }, this.state.htmlArray), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this._handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 14\n      }\n    }, \"Please select file to update image\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleImageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 22\n      }\n    }, \"Upload Image\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 22\n      }\n    }, \"X\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/student_m13/Desktop/Github/giphyapp/src/components/Bookmarks.js"],"names":["React","Component","axios","BrowserRouter","Router","Route","Link","Switch","Bookmarks","constructor","props","componentDidMount","getApi","htmlArr","fetch","method","headers","then","response","json","data","console","log","map","dt","gifUrl","gifID","gifDelete","gifUpdate","setState","htmlArray","catch","err","e","preventDefault","target","value","document","getElementsByClassName","style","display","urlChange","handleImageChange","filePath","handleSubmit","state","updateDb","alert","body","JSON","stringify","closeModal","src","render","_handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {  BrowserRouter as Router, Route, Link ,Switch} from \"react-router-dom\";\n// import $ from 'jquery';\n\n\nimport './styles/Gif.scss'\n\nexport default class Bookmarks extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\nsrc:'',\nfilePath:'',\nhtmlArray:[],\nurlChange:''\n        }\n    }\n    componentDidMount=()=>{\n        this.getApi()\n    }\n\n    getApi=async()=> {\n        var htmlArr=[]\n        await fetch('/giphy/v1/gifs', {\n            method:'GET',\n           headers: {\n             'Accept': 'application/json',\n             'Content-Type': 'application/json'\n           }\n           \n         }).then(response=> response.json()) .then(data=>{\n           \n            console.log(data)\n            htmlArr= data.map(dt=>{\nreturn(\n<div>\n    <img src={dt.gifUrl}/>\n    <button value={dt.gifID} onClick={this.gifDelete}> Delete</button>\n    <button value={dt.gifID} onClick={this.gifUpdate}> Update</button>\n    </div>\n)\n                \n  }  )    \n  this.setState({htmlArray:htmlArr})\n } ).catch((err) => \n            console.log ('error')\n            )\n    }\n\n    gifDelete=async(e)=>{\n        e.preventDefault()\nconsole.log(e.target.value)\n        await fetch('/giphy/v1/gifs/'+e.target.value, {\n            method: 'DELETE',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            }\n          })\n    //       .then( => {\n    //    // let updatedEmployees = [...this.state.employees].filter(i => i.id !== id);\n    //        // this.setState({employees: updatedEmployees});\n    //       });\n          this.getApi()\n\n    }\n    gifUpdate=(e)=>{\n        e.preventDefault()\n         document.getElementsByClassName('modal')[0].style.display='flex'\n         this.setState({urlChange:e.target.value})\n    }\n    handleImageChange=(e)=>{\n      e.preventDefault()\n      this.setState({filePath:e.target.value})\n\n      // let reader = new FileReader();\n      // let file = e.target.files[0];\n  \n      // reader.onloadend = () => {\n      //   this.setState({\n      //     file: file,\n         \n      //   });\n      // }\n  \n      // reader.readAsDataURL(file)\n\n    }\n    handleSubmit=(e)=>{\n      e.preventDefault()\nconsole.log(this.state.urlChange)\nthis.updateDb()\ndocument.getElementsByClassName('modal')[0].style.display='none'\nalert(\"Image Uploaded\")\n    }\n\n    updateDb=async()=>{\n      await fetch('/giphy/v1/gifs/'+this.state.urlChange, {\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body:JSON.stringify({gifUrl:this.state.filePath})\n\n\n        }  )\n        this.getApi()\n    \n  }\n  //https://coursework.vschool.io/deploying-with-surge/\n  closeModal=()=>{\n    document.getElementsByClassName('modal')[0].style.display='none'\n  }\n\n    render(){\n\n        return(\n          <div className=\"Container\">\n           <div className=\"GridContainer\">\n\n{this.state.htmlArray}\n           </div> \n           <div className=\"modal\">\n           <form onSubmit={this._handleSubmit}>\n             <h1>Please select file to update image</h1>\n                     <input type=\"text\" onChange={this.handleImageChange} />\n                     <button type=\"submit\" onClick={this.handleSubmit}>Upload Image</button>\n                     <button type=\"submit\" onClick={this.closeModal}>X</button>\n                   </form>\n                   </div>\n                   </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}