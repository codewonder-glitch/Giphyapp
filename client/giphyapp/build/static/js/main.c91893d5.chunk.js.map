{"version":3,"sources":["components/Bookmarks.js","components/GifImages.js","components/Router.js","App.js","serviceWorker.js","index.js"],"names":["Bookmarks","props","componentDidMount","getApi","a","htmlArr","fetch","method","headers","then","response","json","data","console","log","map","dt","src","gifUrl","value","gifID","onClick","gifDelete","gifUpdate","setState","htmlArray","catch","err","e","preventDefault","target","document","getElementsByClassName","style","display","urlChange","handleImageChange","filePath","handleSubmit","state","updateDb","alert","body","JSON","stringify","className","this","onSubmit","_handleSubmit","type","onChange","Component","GifImages","saveImage","searchKey","gifObj","gifName","gifCategory","undefined","callApi","prevProps","process","axios","get","res","images","downsized","url","resObj","Fragment","RouterCollection","handleChange","srch","to","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c91893d5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {  BrowserRouter as Router, Route, Link ,Switch} from \"react-router-dom\";\n// import $ from 'jquery';\n\n\nimport './styles/Gif.scss'\n\nexport default class Bookmarks extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\nsrc:'',\nfilePath:'',\nhtmlArray:[],\nurlChange:''\n        }\n    }\n    componentDidMount=()=>{\n        this.getApi()\n    }\n\n    getApi=async()=> {\n        var htmlArr=[]\n        await fetch('/giphy/v1/gifs', {\n            method:'GET',\n           headers: {\n             'Accept': 'application/json',\n             'Content-Type': 'application/json'\n           }\n           \n         }).then(response=> response.json()) .then(data=>{\n           \n            console.log(data)\n            htmlArr= data.map(dt=>{\nreturn(\n<div>\n    <img src={dt.gifUrl}/>\n    <button value={dt.gifID} onClick={this.gifDelete}> Delete</button>\n    <button value={dt.gifID} onClick={this.gifUpdate}> Update</button>\n    </div>\n)\n                \n  }  )    \n  this.setState({htmlArray:htmlArr})\n } ).catch((err) => \n            console.log ('error')\n            )\n    }\n\n    gifDelete=async(e)=>{\n        e.preventDefault()\nconsole.log(e.target.value)\n        await fetch('/giphy/v1/gifs/'+e.target.value, {\n            method: 'DELETE',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            }\n          })\n    //       .then( => {\n    //    // let updatedEmployees = [...this.state.employees].filter(i => i.id !== id);\n    //        // this.setState({employees: updatedEmployees});\n    //       });\n          this.getApi()\n\n    }\n    gifUpdate=(e)=>{\n        e.preventDefault()\n         document.getElementsByClassName('modal')[0].style.display='flex'\n         this.setState({urlChange:e.target.value})\n    }\n    handleImageChange=(e)=>{\n      e.preventDefault()\n      this.setState({filePath:e.target.value})\n\n      // let reader = new FileReader();\n      // let file = e.target.files[0];\n  \n      // reader.onloadend = () => {\n      //   this.setState({\n      //     file: file,\n         \n      //   });\n      // }\n  \n      // reader.readAsDataURL(file)\n\n    }\n    handleSubmit=(e)=>{\n      e.preventDefault()\nconsole.log(this.state.urlChange)\nthis.updateDb()\ndocument.getElementsByClassName('modal')[0].style.display='none'\nalert(\"Image Uploaded\")\n    }\n\n    updateDb=async()=>{\n      await fetch('/giphy/v1/gifs/'+this.state.urlChange, {\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body:JSON.stringify({gifUrl:this.state.filePath})\n\n\n        }  )\n        this.getApi()\n    \n    \n  }\n\n    render(){\n\n        return(\n          <div className=\"Container\">\n           <div className=\"GridContainer\">\n\n{this.state.htmlArray}\n           </div> \n           <div className=\"modal\">\n           <form onSubmit={this._handleSubmit}>\n             <h1>Please select file to update image</h1>\n                     <input type=\"text\" onChange={this.handleImageChange} />\n                     <button type=\"submit\" onClick={this.handleSubmit}>Upload Image</button>\n                   </form>\n                   </div>\n                   </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Bookmarks from'./Bookmarks'\nimport './styles/Gif.scss'\n\nexport default class GifImages extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\nsrc:'',\nhtmlArray:[],\nsearchKey:''\n        }\n    }\n\n    componentDidMount() {\n    \n     \n       if(this.props.searchKey!=undefined)\n     this.callApi();   \n        \n    }\n\n    componentDidUpdate(prevProps) {\n      console.log(this.props.searchKey)\n      if (this.props.searchKey!=prevProps.searchKey)\n       {\n         \n         console.log(this.props.searchKey)\n           this.callApi()\n       }\n           }\n    \n    \n\n    async callApi() {\n      // this.setState({searchKey:this.props.searchKey})\n      var searchKey=this.props.searchKey\n      var apikey=process.env.REACT_APP_API_KEY\n        console.log(process.env.REACT_APP_API_KEY)\n        axios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.giphy.com/v1/gifs/search?api_key=`+apikey+`&q=`+searchKey,{\n        // axios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.giphy.com/v1/stickers/trending?api_key=8tuRAlgbK4rykSIbwcmzljWJT1s35yt4`, {\n           \n       \n        \n        })\n        .then((res) => {\n          console.log(res.data)\n          // this.setState({htmlArray:res.data.data});\n            console.log(res.data.data[0].images.downsized.url)\n            console.log(this.state.htmlArray)\n            // this.setState({img:res.data.data[0].images.downsized.url})\n       \n      //       let src;\n        let htmlArray = res.data.data.map(resObj => \n          <div>\n       <button value={resObj.images.downsized.url} onClick={this.saveImage} >\"Bookmark\"</button>\n      <img src={resObj.images.downsized.url} />\n      </div>\n      \n        );\n        this.setState({htmlArray:htmlArray})\n         \n         {/* <Link to=\"/Reviews\" onClick={() => this.props.capture(<Restaurant imgclicked={resObj} location={resObj.location.display_address} />,resObj.alias)} >\n            <Restaurant imgclicked={resObj} location={resObj.location.display_address} />\n             </Link> */}\n        //this.setState({resHTML:elements});\n        //this.img_onclick(1);\n        //console.log(this.state.data[0].location.display_address);\n        })\n        .catch((err) => {\n        console.log ('error');\n        })\n        \n      }\n\n      \n\n      saveImage=(e)=>{\n        console.log(this.props.searchKey)\n        var gifObj={ }\n         gifObj={\n          gifName: this.props.searchKey,\n          gifCategory: this.props.searchKey,\n          gifUrl: e.target.value\n\n        }\n        console.log(gifObj[\"GifName\"])\n        fetch('/giphy/v1/gifs', {\n          method: 'POST',\n         //  method:'PUT',\n         headers: {\n           'Accept': 'application/json',\n           'Content-Type': 'application/json'\n         },\n         body: JSON.stringify( gifObj )\n       });\n      }\nrender(){\n\n  return (\n  \n    <React.Fragment>\n  <div className=\"gridContainer\">\n  {this.state.htmlArray}\n       {/* <div style={{ margin: \"100px\" , 'display' : 'flex', justifyContent: \"center\"}}>\n       <Carousel className=\"carousel-container\" style={{'height':\"500px\", 'width' : \"700px\" , \n                            }} >\n    { this.state.htmlArray.map(resObj =>{\n      return(\n       <Carousel.Item className=\"carousel-item\">\n                        <img style={{'height':\"500px\" , 'width': \"570px\", 'padding' : '40px', 'marginLeft' : '65px'}} \n                        \n                        src={resObj.images.downsized.url}\n                        alt=\"First slide\"  \n                        />  </Carousel.Item  > \n      \n       ) }              \n      )\n       }\n     \n      \n     </Carousel>\n    </div>  */}\n    </div>\n    </React.Fragment> \n  )\n}\n\n}\n\n\n\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Bookmarks from './Bookmarks'\nimport {  BrowserRouter as Router, Route, Link ,Switch} from \"react-router-dom\";\nimport GifImages from './GifImages'\nimport './styles/Gif.scss'\n\nexport default class RouterCollection extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n        searchKey:'',\n        srch:''\n        }\n    }\n   \n\n    componentDidMount() {\n    }\n\n    handleChange=(e)=>{\n        e.preventDefault()\n        this.setState({srch:e.target.value})\n    }\n\n    render(){\n\n        return(\n           <div>\n\n<React.Fragment>\n     <div className=\"container\">\n     <div>\n       <input type=\"text\" onChange={this.handleChange}></input>\n      <Router>\n         <div className=\"Route\">\n         <Link to=\"/Search\" >  <button type=\"submit\" onClick={(e)=>this.setState({searchKey:this.state.srch})}>Submit</button ></Link>\n    <Link to=\"/Reactions\" > Reactions</Link>\n  <Link to=\"/Sports\">Sports</Link>\n   <Link to=\"/Entertainment\">Entertainment</Link>\n   <Link to=\"/Artists\">Artists</Link>\n   <Link to=\"/Bookmarks\">Bookmarks</Link>\n   </div>\n    <Switch>\n    <Route exact path=\"/Search\" ><GifImages searchKey={this.state.searchKey} /> </Route> \n    <Route exact path=\"/Reactions\" ><GifImages searchKey=\"Reactions\" /> </Route>  \n    <Route exact path=\"/Sports\"><GifImages searchKey=\"Sports\" /> </Route> \n    <Route exact path=\"/Entertainment\" ><GifImages searchKey=\"Entertainment\" /></Route>  \n    <Route exact path=\"/Artists\"><GifImages searchKey=\"Artists\" /> </Route> \n        <Route exact path=\"/Bookmarks\"><Bookmarks /></Route>  \n    </Switch>\n    </Router> \n  </div>  \n\n     </div>\n     </React.Fragment> \n           </div> \n        )\n    }\n}\n\nconst Entertainment=(props)=>{\n    // switch (props.name){\n    // case Entertainment:\n    \n    \n    return(\n    <div>\n      {props.data}\n    </div>\n    \n    )\n    \n    \n    }\n    \n    ","import React from 'react';\nimport RouterCollection from './components/Router'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n   \n       \n      \n        <RouterCollection/>\n     \n        \n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}